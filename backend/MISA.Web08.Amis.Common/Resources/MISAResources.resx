<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DevMsg_DuplicateCode" xml:space="preserve">
    <value>EmployeeCode is existed , please try another code</value>
    <comment>Thông báo cho lập trình viên mã bị trùng</comment>
  </data>
  <data name="DevMsg_Exception" xml:space="preserve">
    <value>Sever has error when try to do this request</value>
    <comment>Thông báo cho lập trình viên lỗi exception</comment>
  </data>
  <data name="DevMsg_ValidateFailed" xml:space="preserve">
    <value>Some fileds of this request is not accepted</value>
    <comment>Thông báo cho lập trình viên lỗi Validate</comment>
  </data>
  <data name="MoreInfo_DuplicateCode" xml:space="preserve">
    <value>https://openapi.misa.com.vn/errorcode/e002</value>
    <comment>Link đến trang mô tả chi tiết lỗi mã trùng</comment>
  </data>
  <data name="MoreInfo_Exception" xml:space="preserve">
    <value>https://openapi.misa.com.vn/errorcode/ehttps://openapi.misa.com.vn/errorcode/e001</value>
    <comment>Link đến trang mô tả chi tiết lỗi về exception</comment>
  </data>
  <data name="MoreInfo_ValidateFailed" xml:space="preserve">
    <value>https://openapi.misa.com.vn/errorcode/e003</value>
    <comment>Link đến trang mô tả chi tiết về validate</comment>
  </data>
  <data name="ProcDeleteOneEmployee" xml:space="preserve">
    <value>Proc_employee_DeleteOne</value>
    <comment>Xóa một nhân viên</comment>
  </data>
  <data name="ProcGetEmployeeFilter" xml:space="preserve">
    <value>Proc_employee_Filter</value>
    <comment>Lọc nhân viên có điều kiện đi kèm</comment>
  </data>
  <data name="ProcGetMaxEmployeeCode" xml:space="preserve">
    <value>Proc_employee_GetMaxCode</value>
    <comment>Lấy nhân viên có mã nhân viên là lớn nhất</comment>
  </data>
  <data name="ProcInsertOneEmployee" xml:space="preserve">
    <value>Proc_employee_InsertOne</value>
    <comment>Thêm mới một nhân viên</comment>
  </data>
  <data name="ProcUpdateOneEmployee" xml:space="preserve">
    <value>Proc_employee_UpdateOne</value>
    <comment>Sửa một nhân viên</comment>
  </data>
  <data name="Proc_GetAll" xml:space="preserve">
    <value>Proc_{0}_GetAll</value>
    <comment>Lấy danh sách tất cả tên table truyền vào</comment>
  </data>
  <data name="ProGetDuplicateCode" xml:space="preserve">
    <value>Proc_employee_DuplicateCode</value>
    <comment>Kiểm tra mã nhân viên trùng</comment>
  </data>
  <data name="ProGetEmployeeByID" xml:space="preserve">
    <value>Proc_employee_GetByID</value>
    <comment>Lấy nhân viên theo ID</comment>
  </data>
  <data name="UserMsg_DuplicateCode" xml:space="preserve">
    <value>Mã nhân viên đã tồn tại trong hệ thống</value>
    <comment>Thông báo cho người dùng bị trùng mã</comment>
  </data>
  <data name="UserMsg_Exception" xml:space="preserve">
    <value>Có lỗi xảy ra, vui lòng liên hệ với MISA để được hỗ trợ</value>
    <comment>Thông báo lỗi cho người dùng phải liên hệ CSKH MISA</comment>
  </data>
  <data name="UserMsg_ValidateFailed" xml:space="preserve">
    <value>Có một hoặc nhiều trường bị lỗi , vui lòng kiểm tra lại</value>
    <comment>Thông báo người dùng có lỗi liên quan tới Validate</comment>
  </data>
</root>